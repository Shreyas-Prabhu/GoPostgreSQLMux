// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/asset/assets": {
            "get": {
                "description": "gets all assets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "gets all assets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Asset"
                            }
                        }
                    }
                }
            }
        },
        "/asset/createasset": {
            "post": {
                "description": "Create a new Asset with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Create a new Asset",
                "parameters": [
                    {
                        "description": "Create Asset",
                        "name": "Asset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Asset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/asset/editasset/{id}": {
            "put": {
                "description": "updates an asset with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Updates Asset",
                "parameters": [
                    {
                        "description": "Update asset",
                        "name": "asset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Asset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/asset/{id}": {
            "get": {
                "description": "gets an asset by providing path variable as asset id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "get Asset",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Asset"
                        }
                    }
                }
            }
        },
        "/dashboard": {
            "get": {
                "description": "gets all data of employee along with number of asset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "gets all data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/deleteasset/{id}": {
            "delete": {
                "description": "delete an asset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Deletes Asset",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/employee/createemployee": {
            "post": {
                "description": "Create a new employee with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Create Employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/employee/deleteemployee/{id}": {
            "delete": {
                "description": "delete an employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Deletes Employee",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/employee/editemployee/{id}": {
            "put": {
                "description": "updates an employee with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Updates Employee",
                "parameters": [
                    {
                        "description": "Update Employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/employee/employees": {
            "get": {
                "description": "gets all Employees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "gets all Employees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Employee"
                            }
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "description": "gets an employee by providing path variable as emp id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "get Employee",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                }
            }
        },
        "/mapping/assignassetmapping": {
            "post": {
                "description": "Create a new Asset Mapping with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mapping"
                ],
                "summary": "Create a new Asset Mapping",
                "parameters": [
                    {
                        "description": "Create Employee Asset Mapping",
                        "name": "EmployeeAsset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeAsset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/mapping/getallassets/{empid}": {
            "get": {
                "description": "gets all asset Mapping by providing path variable as emp id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mapping"
                ],
                "summary": "get Asset Mapping for an employee id",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/mapping/removeassetmapping/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mapping"
                ],
                "summary": "Remove asset mapping",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Asset": {
            "type": "object",
            "properties": {
                "assetid": {
                    "type": "string"
                },
                "assetname": {
                    "type": "string",
                    "example": "Laptop"
                },
                "assettype": {
                    "type": "string",
                    "example": "Electronic"
                }
            }
        },
        "model.Employee": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "mumbai"
                },
                "bloodgroup": {
                    "type": "string",
                    "example": "AB-ve"
                },
                "emergencycontact": {
                    "type": "integer",
                    "example": 84984894
                },
                "empid": {
                    "type": "string"
                },
                "employeeemail": {
                    "type": "string",
                    "example": "ppp@gmail.com"
                },
                "firstname": {
                    "type": "string",
                    "example": "Shreyas"
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "lastname": {
                    "type": "string",
                    "example": "Prabhu"
                },
                "phonenumber": {
                    "type": "integer",
                    "example": 8787878787
                }
            }
        },
        "model.EmployeeAsset": {
            "type": "object",
            "properties": {
                "assetid": {
                    "type": "string",
                    "example": "\u003cReplace with the asset id\u003e"
                },
                "empid": {
                    "type": "string",
                    "example": "\u003cReplace with the emp id\u003e"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:4000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "EmployeeAssetManagement",
	Description:      "This is a Employee Asset management intended to use internally only. Not a public facing api.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
